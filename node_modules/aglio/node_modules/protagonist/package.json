{
  "name": "protagonist",
  "version": "0.17.1",
  "description": "API Blueprint Parser",
  "author": {
    "name": "Apiary.io",
    "email": "support@apiary.io"
  },
  "main": "./build/Release/protagonist",
  "repository": {
    "type": "git",
    "url": "https://github.com/apiaryio/protagonist.git"
  },
  "engines": {
    "node": ">=0.8.15"
  },
  "devDependencies": {
    "coffee-script": "~1.6.0",
    "mocha": "~1.17.1",
    "async": "~0.2.10",
    "chai": "~1.9.0",
    "segfault-handler": "git://github.com/ddopson/node-segfault-handler.git#master"
  },
  "scripts": {
    "test": "make test",
    "install": "node-gyp rebuild"
  },
  "license": "MIT",
  "gypfile": true,
  "readme": "![logo](https://raw.github.com/apiaryio/api-blueprint/master/assets/logo_apiblueprint.png)\n\n# Protagonist [![Build Status](https://travis-ci.org/apiaryio/protagonist.png?branch=master)](https://travis-ci.org/apiaryio/protagonist)\n### API Blueprint Parser for Node.js\nProtagonist is a Node.js wrapper for the [Snow Crash](https://github.com/apiaryio/snowcrash) library.\n\nAPI Blueprint is Web API documentation language. You can find API Blueprint documentation on the [API Blueprint site](http://apiblueprint.org).\n\n## Install\nThe best way to install Protagonist is by using its [NPM package](https://npmjs.org/package/protagonist).\n\n```sh\n$ npm install protagonist\n```\n\n## Getting started\n\n```js\nvar protagonist = require('protagonist');\n\nprotagonist.parse('# My API', function(error, result) {\n    if (error) {\n        console.log(error);\n        return;\n    }\n  \n    console.log(result.ast);\n});\n```\n\n### Parsing Result\n\nParsing this blueprint: \n\n```\n# GET /1\n+ response\n```\n\nwill produce the following object (`result` variable):\n\n```json\n{\n  \"ast\": {\n    \"_version\": \"2.1\",\n    \"metadata\": [],\n    \"name\": \"\",\n    \"description\": \"\",\n    \"resourceGroups\": [\n      {\n        \"name\": \"\",\n        \"description\": \"\",\n        \"resources\": [\n          {\n            \"name\": \"\",\n            \"description\": \"\",\n            \"uriTemplate\": \"/1\",\n            \"model\": {},\n            \"parameters\": [],\n            \"actions\": [\n              {\n                \"name\": \"\",\n                \"description\": \"\",\n                \"method\": \"GET\",\n                \"parameters\": [],\n                \"examples\": [\n                  {\n                    \"name\": \"\",\n                    \"description\": \"\",\n                    \"requests\": [],\n                    \"responses\": [\n                      {\n                        \"name\": \"200\",\n                        \"description\": \"\",\n                        \"headers\": [],\n                        \"body\": \"\",\n                        \"schema\": \"\"\n                      }\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"warnings\": [\n    {\n      \"code\": 6,\n      \"message\": \"missing response HTTP status code, assuming 'Response 200'\",\n      \"location\": [\n        {\n          \"index\": 12,\n          \"length\": 9\n        }\n      ]\n    }\n  ]\n}\n```\n\n#### Keys Description\n\n+ `ast` ... This is the abstract syntax tree (AST) of the parsed blueprint. \n\n    The structure under this key is **1:1** with the [AST Blueprint serialization JSON media type v2.1](https://github.com/apiaryio/api-blueprint-ast#json-serialization) â€“ `vnd.apiblueprint.ast.raw+json; version=2.1`.\n\n+ `warnings` ... Array of the parser warnings as occurred during the parsing\n    + `code` ...  Warning [group](https://github.com/apiaryio/snowcrash/blob/master/src/SourceAnnotation.h#L128) code\n    + `message` ... Warning message\n    + `location` ... Array of (possibly non-continuous) locations in the source blueprint\n        + `index` ... Zero-based index of the character where the warning occurs\n        + `lenght` ... Number of the characters from index where the warning occurs\n\n## Hacking Protagonist\nYou are welcome to contribute. Use following steps to build & test Protagonist.\n\n### Build\nProtagonist uses [node-gyp](https://github.com/TooTallNate/node-gyp) build tool. \n\n1. If needed, install node-gyp:\n\n    ```sh\n    $ npm install -g node-gyp\n    ```\n\n2. Clone the repo + fetch the submodules:\n\n    ```sh\n    $ git clone git://github.com/apiaryio/protagonist.git\n    $ cd protagonist\n    $ git submodule update --init --recursive\n    ```\n    \n3. Build:\n    \n    ```sh\n    $ node-gyp configure\n    $ node-gyp build    \n    ```\n\n### Test\nInside the protagonist repository run:\n\n```sh\n$ npm install\n$ npm test\n```\n    \n### Contribute\nFork & Pull Request. \n\n## License\nMIT License. See the [LICENSE](https://github.com/apiaryio/protagonist/blob/master/LICENSE) file.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/apiaryio/protagonist/issues"
  },
  "homepage": "https://github.com/apiaryio/protagonist",
  "_id": "protagonist@0.17.1",
  "dist": {
    "shasum": "c380d227e2b8445f2246efa9130fea9288a6d232"
  },
  "_from": "protagonist@~0.17.1",
  "_resolved": "https://registry.npmjs.org/protagonist/-/protagonist-0.17.1.tgz"
}
